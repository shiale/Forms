#Область ОтборПоСкладу
&НаКлиенте
Процедура ОтобратьПоОсновномуСкладу(Команда)
	ОтобратьПоОсновномуСкладуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоОсновномуСкладуНаСервере()
	
	Отбор = Список.КомпоновщикНастроек.Настройки.Отбор;
	
	Идентификатор = Отбор.ИдентификаторПользовательскойНастройки;
	ОтборВПользовательскихНастройках = 
		Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Идентификатор);
		
	РаботаемСНастройками = Истина;
	Если ОтборВПользовательскихНастройках <> Неопределено Тогда
		Отбор = ОтборВПользовательскихНастройках;
		РаботаемСНастройками = Ложь;
	КонецЕсли;
	
	ОтборПоСкладу = Неопределено;
	ПолеСклад = Новый ПолеКомпоновкиДанных("Склад");
	
	Для Каждого ЭлементОтбора Из Отбор.Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			Если ЭлементОтбора.ЛевоеЗначение = ПолеСклад Тогда
				ОтборПоСкладу = ЭлементОтбора;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ОтборПоСкладу = Неопределено Тогда
		ОтборПоСкладу = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоСкладу.ЛевоеЗначение = ПолеСклад;
		ОтборПоСкладу.Использование = Ложь;
		ОтборПоСкладу.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		ОтборПоСкладу.ИдентификаторПользовательскойНастройки = Новый УникальныйИдентификатор;
		Элементы.Список.СоздатьЭлементыФормыПользовательскихНастроек();
	КонецЕсли;
	
	Если РаботаемСНастройками Тогда
		ОтборПоСкладу = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ОтборПоСкладу.ИдентификаторПользовательскойНастройки);
	КонецЕсли;
	
	ОтборПоСкладу.Использование = Не ОтборПоСкладу.Использование;
	ОтборПоСкладу.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборПоСкладу.ПравоеЗначение = Константы.ОсновнойСклад.Получить();
	Элементы.ФормаОтобратьПоОсновномуСкладу.Пометка = ОтборПоСкладу.Использование;
	
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура СгруппироватьПоКонтрагентам(Команда)
	
	Идентификатор = Список.КомпоновщикНастроек.Настройки.Структура.ИдентификаторПользовательскойНастройки;
	СтруктураГруппировок = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Идентификатор);
	
	Группировки = СтруктураГруппировок.Структура;
	ПолеКонтрагент = Новый ПолеКомпоновкиДанных("Контрагент");
	ГруппировкаПоКонтрагенту = Неопределено;
	
	Для Каждого ГруппировкаСписка Из Группировки Цикл
		Если ТипЗнч(ГруппировкаСписка) = Тип("ГруппировкаКомпоновкиДанных") Тогда
			Для Каждого ПолеГруппировки Из ГруппировкаСписка.ПоляГруппировки.Элементы Цикл
				Если ТипЗнч(ПолеГруппировки) = Тип("ПолеГруппировкиКомпоновкиДанных") И
					ПолеГруппировки.Поле = ПолеКонтрагент Тогда
					ГруппировкаПоКонтрагенту = ГруппировкаСписка;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если ГруппировкаПоКонтрагенту <> Неопределено Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ГруппировкаПоКонтрагенту = Неопределено Тогда
		Группировки.Очистить();
		ГруппировкаПоКонтрагенту = Группировки.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		ПолеГруппировки = ГруппировкаПоКонтрагенту.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле = ПолеКонтрагент;
		ПолеГруппировки.Использование = Истина;
		
		ГруппировкаПоСкладу = Группировки.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		ПолеГруппировки = ГруппировкаПоСкладу.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных("Склад");
		ПолеГруппировки.Использование = Истина;
		
		Элементы.ФормаСгруппироватьПоКонтрагентам.Пометка = Истина;
	Иначе
		Группировки.Очистить();
		Элементы.ФормаСгруппироватьПоКонтрагентам.Пометка = Ложь;
	КонецЕсли;
	
	
КонецПроцедуры
